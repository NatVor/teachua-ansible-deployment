# tasks file for backend
---
- name: Install Java (Java 17)
  ansible.builtin.apt:
    name: openjdk-17-jdk
    state: present
  become: yes

- name: Create a tomcat group
  ansible.builtin.group:
    name: tomcat
    state: present

- name: Create a tomcat user
  ansible.builtin.user:
    name: tomcat
    group: tomcat
    home: "{{ tomcat_install_dir }}"
    shell: /bin/false
    state: present

- name: Download Apache Tomcat
  ansible.builtin.get_url:
    url: "{{ tomcat_download_url }}"
    dest: /tmp/apache-tomcat-{{ tomcat_version }}.tar.gz

- name: Create Tomcat installation directory
  ansible.builtin.file:
    path: "{{ tomcat_install_dir }}"
    state: directory
    owner: tomcat
    group: tomcat
    mode: '0755'

- name: Extract Tomcat archive
  ansible.builtin.unarchive:
    src: /tmp/apache-tomcat-{{ tomcat_version }}.tar.gz
    dest: "{{ tomcat_install_dir }}"
    remote_src: yes
    creates: "{{ tomcat_install_dir }}/apache-tomcat-{{ tomcat_version }}"

- name: Create symbolic link to Tomcat
  ansible.builtin.file:
    src: "{{ tomcat_install_dir }}/apache-tomcat-{{ tomcat_version }}"
    dest: "{{ tomcat_install_dir }}/latest"
    state: link

- name: Ensure correct ownership of Tomcat files
  ansible.builtin.file:
    path: "{{ tomcat_install_dir }}"
    state: directory
    recurse: yes
    owner: tomcat
    group: tomcat

- name: Configure Tomcat service
  ansible.builtin.template:
    src: tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service
    owner: root
    group: root
    mode: '0644'

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Start Tomcat service
  ansible.builtin.systemd:
    name: tomcat
    state: started
    enabled: yes

- name: Deploy the WAR file
  ansible.builtin.copy:
    src: "{{ war_file_src }}"
    dest: "{{ war_file_dest }}"
    owner: tomcat
    group: tomcat
    mode: '0644'
